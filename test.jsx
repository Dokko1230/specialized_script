// GLOBALS var myPath = File("~/workspace/specialized_script/");// INITIALIZE$.writeln("app: " + app.toString());main();// FUNCTIONSfunction main() {    var myCatalogPath = myPath + "/catalogue.txt";    var myTemplatePath = myPath + "/templates/";    var myXMLPath = myPath + "/data/";    var aFile = File.openDialog ( myCatalogPath) ;    var fileData = readTabDelimitedFile ( aFile ) ;    var count = 0;    for ( var dIndex = 0 ; dIndex < fileData.length ; dIndex++ ) {        var ary = fileData[dIndex];        if (ary[2]) {            //$.writeln( "ary length : " + ary.length);            //$.writeln("toString: " + ary[2]);            //$.writeln( ary.join (' ') ) ;            var newName = new String(ary[0] + ".indd");            var xmlPath = new String(myXMLPath + ary[1] + ".xml");            var templateName = new String(myTemplatePath + ary[2].toLowerCase() + ".indd");            $.writeln(newName + " " +  xmlPath + " " + templateName);            createNewTemplate (newName, xmlPath, templateName);            count++;            }        }        $.writeln("Template processing complete. Total number of templates created: " + count);    }function getScriptPath() {    try {        return app.activeScript;        }    catch(err) {        return File(err.fileName);        }    }function readTabDelimitedFile ( fPath ) {	var returnArray = new Array ();	var fileObject = File ( fPath );		if ( ! fileObject.exists ) {			return returnArray;		}	var tabExpression = new RegExp ( '\\t' ) ;	try {		fileObject.open ('r') ; //-- Open for reading.		while ( ! fileObject.eof ) {			var currentLine = fileObject.readln () ;				if ( tabExpression.test( currentLine ) ) {					returnArray.push(currentLine.split ('\t')) ;				}		}		fileObject.close();	} catch (errMain) {		try {		fileObject.close();		}		catch (errInner ) {}	}	return returnArray ;}function saveDocumentAs(name, document) {    if(app.activeDocument.saved == false) {        app.activeDocument.save(new File(myPath + "/t/" + name), true);        }    }function closeSaveDocument(name) {    app.activeDocument.close(SaveOptions.yes, new File(myPath + "/t/" + name));    }function createNewTemplate(newName, XMLFilePath,  templateName) {    var temp = app.open(File(templateName));    temp.importXML(File(XMLFilePath));    //saveDocumentAs(newName);    closeSaveDocument(newName);    alert("saved!");    }